<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.decolab.wanza.dao.QuestionDAO">

	<!-- 질문과답변 전체 목록 가져오기 -->
	<select id="getAllQuestionList" resultType="com.decolab.wanza.dto.QuestionDTO">
		SELECT Q.QUESTIONSEQ 
			,Q.USERSEQ 
			,Q.QUESTIONTITLE 
			,Q.QUESTIONCONTENT 
			,Q.QUESTIONREADCOUNT 
			,Q.QUESTIONREGDATE 
			,Q.QUESTIONFILENAME 
			,Q.QUESTIONDEL
		   	,U.USERNAME 
		   	,U.NICKNAME 
		   	,U.PROFILENAME 
		   	,U.AUTH
		FROM QUESTION Q, USERS U
		WHERE 1=1
		AND QUESTIONDEL = 0
		AND Q.USERSEQ = U.USERSEQ
		ORDER BY QUESTIONSEQ DESC
	</select>
	
	<!-- 질문과답변 글쓰기 -->
	<insert id="questionWrite" parameterType="com.decolab.wanza.dto.QuestionDTO">
		INSERT INTO QUESTION
		VALUES(QUESTIONSEQ.NEXTVAL, #{userSeq}, #{questionTitle}, #{questionContent}, 0, SYSDATE, #{questionFileName}, 0, 0, 0, 0)
	</insert>
	
	<!-- 질문과답변 디테일가져오기 
	<select id="questionDetail" parameterType="com.decolab.wanza.dto.QuestionDTO" resultType="com.decolab.wanza.dto.QuestionDTO">
		SELECT QUESTIONSEQ, QUESTIONTITLE, QUESTIONCONTENT, QUESTIONREADCOUNT, QUESTIONREGDATE, QUESTIONFILENAME, QUESTIONDEL, QUESTIONREF, QUESTIONSTEP QUESTIONDEPTH
		FROM QUESTION
		WHERE QUESTIONSEQ = #{questionSeq}
	</select>-->
	
	<!-- 질문과답변 디테일가져오기 & 유저테이블정보도 다 가져오기 -->
	<select id="questionDetail" parameterType="com.decolab.wanza.dto.QuestionDTO" resultType="com.decolab.wanza.dto.QuestionDTO">
		SELECT Q.QUESTIONSEQ 
			,Q.USERSEQ 
			,Q.QUESTIONTITLE 
			,Q.QUESTIONCONTENT 
			,Q.QUESTIONREADCOUNT 
			,Q.QUESTIONREGDATE 
			,Q.QUESTIONFILENAME 
			,Q.QUESTIONDEL
		   	,U.USERNAME 
		   	,U.NICKNAME 
		   	,U.PROFILENAME 
		   	,U.AUTH
		FROM QUESTION Q, USERS U
		WHERE 1=1
		AND Q.USERSEQ = U.USERSEQ 
		AND Q.QUESTIONSEQ = #{questionSeq}
	</select>
	
	<!-- 질문과답변 댓글리스트 가져오기 -->
	<select id="questionCommentList" parameterType="com.decolab.wanza.dto.QuestionCommentDTO" resultType="com.decolab.wanza.dto.QuestionCommentDTO">
		SELECT Q.QUESTIONSEQ
		, Q.USERSEQ
		, Q.QCSEQ
		, Q.QCCONTENT
		, Q.QCREGDATE
		, Q.QCFILENAME
		, Q.QCDEL
		, Q.QCREF
		, Q.QCSTEP
		, Q.QCDEPTH
        , U.USERNAME
        , U.NICKNAME
        , U.AUTH
        , U.PROFILENAME
		FROM Q_COMMENT Q, USERS U
		WHERE 1=1 
		AND Q.USERSEQ = U.USERSEQ 
		AND Q.QCDEL = 0
		AND Q.QUESTIONSEQ = #{questionSeq}
		ORDER BY QCSEQ DESC, QCREF ASC
	</select>
	
	<!-- 질문과답변 댓글리스트와 덧글리스트 전부 가져오기 -->
	<select id="allquestionCommentList" parameterType="com.decolab.wanza.dto.QuestionDTO" resultType="com.decolab.wanza.dto.QuestionCommentDTO">
		SELECT 
		  Q.QUESTIONSEQ
		, Q.USERSEQ
		, QC.QCSEQ
		, QC.QCCONTENT
		, QC.QCREGDATE
		, QC.QCFILENAME
		, QC.QCDEL
		, QC.QCREF
		, QC.QCSTEP
		, QC.QCDEPTH
        , U.USERNAME
        , U.NICKNAME
        , U.AUTH
        , U.PROFILENAME
        
		FROM QUESTION Q, USERS U, Q_COMMENT QC
		WHERE 1=1 
		AND Q.USERSEQ = U.USERSEQ 
		AND Q.USERSEQ = QC.USERSEQ
		AND Q.QCDEL = 0
		AND Q.QUESTIONSEQ = #{questionSeq}
		ORDER BY QCSEQ DESC, QCREF ASC
	</select>
	
	<!-- 질문과답변 댓글쓰기 -->
	<insert id="questionComment" parameterType="com.decolab.wanza.dto.QuestionCommentDTO">
		INSERT INTO Q_COMMENT
		VALUES(
		#{questionSeq}
		, #{userSeq}
		, QCSEQ.NEXTVAL
		, #{qcContent}
		, SYSDATE
		, #{qcFileName}
		, 0
		, (SELECT NVL(MAX(QCREF)+1, 0) FROM Q_COMMENT)
		, 0
		, 0)
	</insert>
	
	<!-- 질문과답변 댓글삭제 -->
	<update id="questionCommentdel" parameterType="com.decolab.wanza.dto.QuestionCommentDTO">
		UPDATE Q_COMMENT
		SET QCDEL = 1
		WHERE QCSEQ = #{qcSeq}
	</update>
	
	<!-- 질문과답변 댓글숫자 세기 -->
	<select id="questionCommentCount" parameterType="com.decolab.wanza.dto.QuestionCommentDTO" resultType="int">
		SELECT NVL(COUNT(*), 0) 
		FROM Q_COMMENT
		WHERE  1=1
		AND QUESTIONSEQ = #{questionSeq}
	</select>
	
	<!-- 질문과답변 댓글에 답글 -->
	<!-- 질문과답변 댓글에 답글달기 -->
	<insert id="questionCommentAnswer" parameterType="com.decolab.wanza.dto.QuestionCommentDTO">
		INSERT INTO Q_COMMENT
		VALUES(
		#{questionSeq}
		, #{userSeq}
		, QCSEQ.NEXTVAL
		, #{qcContent}
		, SYSDATE
		, #{qcFileName}
		, 0
		, (SELECT QCREF FROM Q_COMMENT WHERE QCSEQ=#{qcSeq})
		, (SELECT QCSTEP FROM Q_COMMENT WHERE QCSEQ=#{qcSeq}) + 1
		, (SELECT QCDEPTH FROM Q_COMMENT WHERE QCSEQ=#{qcSeq}) + 1
		)
	</insert>
	
	<!-- 질문과답변 댓글에 답글달면서 부모글 번호조정 -->
	<update id="questionCommentAnswerStep" parameterType="com.decolab.wanza.dto.QuestionCommentDTO">
		UPDATE Q_COMMENT
		SET QCSTEP = QCSTEP + 1
		WHERE QCREF = (SELECT QCREF FROM Q_COMMENT WHERE QCSEQ=#{qcSeq})
		AND QCSTEP >= (SELECT QCSTEP FROM Q_COMMENT WHERE QCSEQ=#{qcSeq}) 
	</update>
	
	
	<!-- 질문과답변 조회수 -->
	<insert id="questionReadCountUp" parameterType="com.decolab.wanza.dto.QuestionDTO">
		UPDATE QUESTION
		SET QUESTIONREADCOUNT = QUESTIONREADCOUNT + 1
		WHERE QUESTIONSEQ = #{questionSeq}
	</insert>
	
	
	
	
	<!-- 질문과답변 목록 가져오기 -->
	<!-- <select id="getQuestionList" resultType="com.decolab.wanza.dto.QuestionDTO">
		SELECT QUESTIONSEQ, QUESTIONTITLE, QUESTIONCONTENT, QUESTIONREADCOUNT, QUESTIONDATE, QUESTIONFILENAME, QUESTIONNEWFILENAME, QUESTIONDEL, 
		QUESTIONREF, QUESTIONSTEP, QUESTIONDEPTH 
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC) AS RNUM,
			  QUESTIONSEQ, QUESTIONTITLE, QUESTIONCONTENT, QUESTIONDATE, QUESTIONDEL, QUESTIONREADCOUNT, QUESTIONREF, QUESTIONSTEP, QUESTIONDEPTH
			  FROM QUESTION
			  WHERE 1=1
			  <if test="choice != null and choice != ''
			  		and search != null and search != ''">
			  	  AND DEL=0		
				  <if test="choice == 'title'">
				  		AND TITLE LIKE '%'||#{search}||'%'		  
				  </if>
				  <if test="choice == 'content'">
				  		AND CONTENT LIKE '%'||#{search}||'%'			  
				  </if>
				  <if test="choice == 'writer'">
				  		AND ID=#{search}  
				  </if>	
			  </if>
			ORDER BY REF DESC, STEP ASC)
		WHERE RNUM BETWEEN ${start} AND ${end}
	</select> -->
	
	<!-- 질문과답변 총수 --> 
	<!-- <select id="getBbsCount" parameterType="bit.com.a.dto.BbsParam" resultType="java.lang.Integer">
		SELECT NVL(COUNT(*), 0)
		FROM BBS
		WHERE 1=1
		<if test="choice != null and choice != ''
		  		and search != null and search != ''">	  	  		
			  <if test="choice == 'title'">
			  		AND TITLE LIKE '%'||#{search}||'%'		  
			  </if>
			  <if test="choice == 'content'">
			  		AND CONTENT LIKE '%'||#{search}||'%'			  
			  </if>
			  <if test="choice == 'writer'">
			  		AND ID=#{search}  
			  </if>	
		  </if>
	</select> -->
	
	
</mapper>



  