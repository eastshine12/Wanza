<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  

  
<mapper namespace="com.decolab.wanza.dao.ProductDAO">

<!-- 메인 상품글 리스트 가져오기 -->
<select id="getProductList" resultType="com.decolab.wanza.dto.ProductDTO">
	SELECT P.PRODUCTSEQ, PRODUCTNAME, PRODUCTCONTENT, PRODUCTPRICE, PRODUCTDISCOUNT, PRODUCTMAKER, PRODUCTFILENAME, PRODUCTRATING,
         NVL((SELECT COUNT(*) 
          FROM PRODUCTION_REVIEW R 
          WHERE R.PRODUCTSEQ=P.PRODUCTSEQ 
          GROUP BY R.PRODUCTSEQ), 0) AS REVIEWCOUNT
	FROM PRODUCTIONS P
	ORDER BY PRODUCTSEQ DESC
</select>

<!-- 상품글 디테일 가져오기 -->
<select id="getProductDetail" parameterType="com.decolab.wanza.dto.ProductDTO" resultType="com.decolab.wanza.dto.ProductDTO">
	SELECT P.PRODUCTSEQ, PRODUCTNAME, PRODUCTCONTENT, PRODUCTPRICE, PRODUCTDISCOUNT, PRODUCTMAKER, PRODUCTFILENAME, PRODUCTRATING,
        LARGECATEGORY, MEDIUMCATEGORY, SMALLCATEGORY
	FROM PRODUCTIONS P, PRODUCTION_TAG T
	WHERE P.PRODUCTSEQ=T.PRODUCTSEQ AND P.PRODUCTSEQ=#{productSeq}
</select>

<!-- 상품의 옵션 리스트 가져오기 -->
<select id="getProductOptionList" parameterType="com.decolab.wanza.dto.ProductOptionDTO" resultType="com.decolab.wanza.dto.ProductOptionDTO">
	SELECT *
	FROM PRODUCTION_OPTION
	WHERE PRODUCTSEQ=#{productSeq}
</select>


<!-- 상품 검색 리스트 가져오기 -->
<select id="getSearchProduct" parameterType="com.decolab.wanza.dto.ProductDTO" resultType="com.decolab.wanza.dto.ProductDTO">
	SELECT PRODUCTSEQ, PRODUCTNAME, PRODUCTCONTENT, PRODUCTPRICE, PRODUCTDISCOUNT, PRODUCTMAKER, PRODUCTFILENAME, PRODUCTRATING
	FROM PRODUCTIONS
	WHERE PRODUCTNAME LIKE'%'||#{productName}||'%'
</select>

<!-- 상품글 리스트 분류하여 가져오기 -->
<select id="getProductSortList" parameterType="com.decolab.wanza.dto.ProductDTO" resultType="com.decolab.wanza.dto.ProductDTO">
	SELECT Z.* FROM(
		SELECT P.PRODUCTSEQ, PRODUCTNAME, PRODUCTCONTENT, PRODUCTPRICE, PRODUCTDISCOUNT, PRODUCTMAKER, PRODUCTFILENAME, PRODUCTRATING, PRODUCTDEL
		       LARGECATEGORY, MEDIUMCATEGORY, SMALLCATEGORY, DECODE(PCOUNT, NULL, 0, PCOUNT) PURCHASECOUNT,
		       												 DECODE(MCOUNT, NULL, 0, MCOUNT) MONTHPURCHASECOUNT,
		       ROW_NUMBER() OVER(ORDER BY DECODE(MCOUNT, NULL, 0, MCOUNT) DESC, DECODE(PCOUNT, NULL, 0, PCOUNT) DESC, PRODUCTRATING DESC) RNUM,
		       NVL((SELECT COUNT(*) FROM PRODUCTION_REVIEW R WHERE R.PRODUCTSEQ=P.PRODUCTSEQ GROUP BY R.PRODUCTSEQ), 0) AS REVIEWCOUNT
		FROM PRODUCTIONS P, PRODUCTION_TAG T, (SELECT PRODUCTSEQ, COUNT(*) PCOUNT,
											   COUNT(CASE WHEN PURCHASEDATE >= SYSDATE-#{recentPeriod} THEN 1 END) MCOUNT
	                                           FROM PURCHASE_PRODUCT GROUP BY PRODUCTSEQ) C
		WHERE P.PRODUCTSEQ=T.PRODUCTSEQ AND P.PRODUCTSEQ=C.PRODUCTSEQ(+) AND PRODUCTDEL=0
		<if test='largeCategory neq null and largeCategory neq ""'>AND LARGECATEGORY=#{largeCategory}</if>
		<if test='mediumCategory neq null and mediumCategory neq ""'>AND MEDIUMCATEGORY=#{mediumCategory}</if>
		<if test='smallCategory neq null and smallCategory neq ""'>AND SMALLCATEGORY=#{smallCategory}</if>
		<if test='productName neq "" and productName neq null' >AND PRODUCTNAME LIKE'%'||#{productName}||'%'</if>
		<choose>
			<when test="sort eq 1"> ORDER BY PRODUCTRATING DESC</when>
			<when test="sort eq 2"> ORDER BY PRODUCTDATE DESC</when>
			<when test="sort eq 3"> ORDER BY PURCHASECOUNT DESC</when>
			<otherwise>ORDER BY RNUM</otherwise>
		</choose>
		)Z
	<if test='startNum neq null and startNum neq "" and endNum neq null and endNum neq ""'>
	WHERE RNUM BETWEEN #{startNum} AND #{endNum}
	</if>
</select>

<!-- 분류한 상품글 총 갯수 가져오기 -->
<select id="getProductSortCount" parameterType="com.decolab.wanza.dto.ProductDTO" resultType="int">
	SELECT NVL(COUNT(*),0)
	FROM PRODUCTIONS P, PRODUCTION_TAG T
	WHERE P.PRODUCTSEQ=T.PRODUCTSEQ
	<if test='largeCategory neq null and largeCategory neq ""'>AND LARGECATEGORY=#{largeCategory}</if>
	<if test='mediumCategory neq null and mediumCategory neq ""'>AND MEDIUMCATEGORY=#{mediumCategory}</if>
	<if test='smallCategory neq null and smallCategory neq ""'>AND SMALLCATEGORY=#{smallCategory}</if>
	<if test='productName neq "" and productName neq null' >AND PRODUCTNAME LIKE'%'||#{productName}||'%'</if>
</select>

<!-- 유저가 구매한 상품인지 조회 & 구매 상품 정보,옵션 가져오기 -->
<select id="getUserPurchase" parameterType="com.decolab.wanza.dto.PurchaseProductDTO" resultType="com.decolab.wanza.dto.PurchaseProductDTO">
	SELECT *
	FROM (SELECT * FROM PURCHASE_PRODUCT WHERE REVIEWSTATUS=0 ORDER BY PURCHASESEQ)
	WHERE PRODUCTSEQ=#{productSeq} AND USERSEQ=#{userSeq} AND ROWNUM=1
</select>


<!-- 상품 리뷰 글 작성 -->
<insert id="addProductReview" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	INSERT INTO PRODUCTION_REVIEW
	VALUES(SEQ_PRODUCT_REV.NEXTVAL, #{productSeq}, #{userSeq}, #{purchaseSeq}, #{productRevContent}, #{productRevFileName}, SYSDATE, 0, #{productRevRating})
</insert>

<!-- 상품 리뷰 Counting -->
<select id="storeRevCount" parameterType="com.decolab.wanza.dto.ProductQuestionDTO" resultType="com.decolab.wanza.dto.ProductQuestionDTO">
	SELECT NVL(COUNT(*), 0) 
	FROM PRODUCTION_REVIEW
	WHERE 1=1
		AND PRODUCTSEQ = #{productSeq}
</select>

<!-- 리뷰 작성 포인트 (글만 50p. 사진 포함시 150p) -->
<update id="addReviewPoint" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	UPDATE USERS
	SET MILEAGE=MILEAGE
	<choose>
		<when test="productRevFileName == null || productRevFileName == ''">
			+50
		</when>
		<otherwise>
			+150
		</otherwise>
	</choose>
	WHERE USERSEQ=#{userSeq}
</update>


<!-- 리뷰 삭제 포인트 차감 (글만 50p. 사진 포함시 150p) -->
<update id="removeReviewPoint" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	UPDATE USERS
	SET MILEAGE=MILEAGE
	<choose>
		<when test="productRevFileName == null || productRevFileName == ''">
			-50
		</when>
		<otherwise>
			-150
		</otherwise>
	</choose>
	WHERE USERSEQ=#{userSeq}
</update>



<!-- 리뷰 status 1로 변경 -->
<update id="updateReviewStatus" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	UPDATE PURCHASE_PRODUCT
	SET REVIEWSTATUS=1
	WHERE PURCHASESEQ=#{purchaseSeq}
</update>


<!-- 해당 상품의 리뷰 점수 계산후  삽입 -->
<update id="updateRating" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	UPDATE PRODUCTIONS
	SET PRODUCTRATING =
	    (SELECT TRUNC(AVG(NVL(PRODUCTREVRATING,0)), 1)
	    FROM PRODUCTION_REVIEW
	    WHERE PRODUCTSEQ=#{productSeq})
	WHERE PRODUCTSEQ=#{productSeq}
</update>


<!-- 해당 상품의 모든 리뷰글 가져오기 -->
<select id="getProductReviewList" parameterType="com.decolab.wanza.dto.ProductReviewDTO" resultType="com.decolab.wanza.dto.ProductReviewDTO">
	SELECT PRODUCTREVSEQ, R.USERSEQ, PRODUCTREVCONTENT, PRODUCTREVFILENAME, PRODUCTREVDATE, PRODUCTREVRATING, NICKNAME
	FROM (SELECT ROW_NUMBER()OVER(ORDER BY PRODUCTREVDATE DESC) AS RNUM, PRODUCTREVSEQ, USERSEQ, PRODUCTREVCONTENT, PRODUCTREVFILENAME, PRODUCTREVDATE, PRODUCTREVRATING FROM PRODUCTION_REVIEW 
			WHERE PRODUCTSEQ=#{productSeq} AND PRODUCTREVDEL=0
			<if test="ratingNum > 0">
				AND PRODUCTREVRATING=#{ratingNum}
			</if>
			) R, USERS U
	WHERE R.USERSEQ=U.USERSEQ AND RNUM&gt;=1+4*#{productRevPageNum} AND RNUM&lt;=4+4*#{productRevPageNum}
	ORDER BY PRODUCTREVDATE DESC
</select>


<!-- 리뷰 총 점수(length -> 총 개수) -->

<select id="getProductReviewCount" parameterType="com.decolab.wanza.dto.ProductReviewDTO" resultType="com.decolab.wanza.dto.ProductReviewDTO">
	<!-- SELECT NVL(COUNT(*), 0) -->
	SELECT PRODUCTREVRATING
	FROM PRODUCTION_REVIEW
	WHERE PRODUCTSEQ=#{productSeq} AND PRODUCTREVDEL = 0
	<if test="ratingNum > 0">
		AND PRODUCTREVRATING=#{ratingNum}
	</if>
</select>


<!-- 상품 리뷰 수정 -->
<update id="updateProductReview" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	UPDATE PRODUCTION_REVIEW
	SET PRODUCTREVCONTENT=#{productRevContent}
	WHERE PRODUCTREVSEQ=#{productRevSeq}
</update>

<!-- 상품 리뷰 삭제 -->
<update id="deleteProductReview" parameterType="com.decolab.wanza.dto.ProductReviewDTO">
	UPDATE PRODUCTION_REVIEW
	SET PRODUCTREVDEL=1
	WHERE PRODUCTREVSEQ=#{productRevSeq}
</update>




<!-- 상품 문의글 작성 -->
<insert id="addProductQnA" parameterType="com.decolab.wanza.dto.ProductQuestionDTO">
	INSERT INTO PRODUCTION_QUESTION (PRODUCTQNASEQ, PRODUCTSEQ, USERSEQ, PURCHASESEQ, PRODUCTQCONTENT, PRODUCTQNADATE, PRODUCTQNADEL)
	VALUES(SEQ_PRODUCT_QNA.NEXTVAL, #{productSeq}, #{userSeq}, #{purchaseSeq}, #{productQContent}, SYSDATE, 0)
</insert>


<!-- 상품 문의글 수정 -->
<update id="updateProductQnA" parameterType="com.decolab.wanza.dto.ProductQuestionDTO">
	UPDATE PRODUCTION_QUESTION
	SET PRODUCTQCONTENT=#{productQContent}
	WHERE PRODUCTQNASEQ=#{productQnASeq}
</update>

<!-- 상품 문의글 삭제 -->
<update id="deleteProductQnA" parameterType="com.decolab.wanza.dto.ProductQuestionDTO">
	UPDATE PRODUCTION_QUESTION
	SET PRODUCTQNADEL=1
	WHERE PRODUCTQNASEQ=#{productQnASeq}
</update>


<!-- 문의글 작성 유저 구매한 상품인지 조회 -->
<select id="purchaseStatus" parameterType="com.decolab.wanza.dto.ProductQuestionDTO" resultType="com.decolab.wanza.dto.ProductQuestionDTO">
	SELECT PURCHASESEQ
	FROM (SELECT * FROM PURCHASE_PRODUCT ORDER BY PURCHASESEQ DESC)
	WHERE PRODUCTSEQ=#{productSeq} AND USERSEQ=#{userSeq} AND ROWNUM=1
</select>


<!-- 해당 상품의 모든 문의글 가져오기 -->
<select id="getProductQnAList" parameterType="com.decolab.wanza.dto.ProductQuestionDTO" resultType="com.decolab.wanza.dto.ProductQuestionDTO">
	SELECT PRODUCTQNASEQ, PRODUCTSEQ, Q.USERSEQ, PURCHASESEQ, PRODUCTQCONTENT, PRODUCTACONTENT, PRODUCTQNADATE, PRODUCTQNADEL, NICKNAME
	FROM (SELECT ROW_NUMBER()OVER(ORDER BY PRODUCTQNADATE DESC) AS RNUM, 
			PRODUCTQNASEQ, PRODUCTSEQ, USERSEQ, PURCHASESEQ, PRODUCTQCONTENT, PRODUCTACONTENT, PRODUCTQNADATE, PRODUCTQNADEL 
			FROM PRODUCTION_QUESTION WHERE PRODUCTSEQ=#{productSeq} AND PRODUCTQNADEL=0) Q, USERS U
	WHERE Q.USERSEQ=U.USERSEQ AND RNUM&gt;=1+4*#{productQnAPageNum} AND RNUM&lt;=4+4*#{productQnAPageNum}
	ORDER BY PRODUCTQNADATE DESC
</select>

<!-- 문의글 총 개수 -->
<select id="getProductQnACount" parameterType="com.decolab.wanza.dto.ProductQuestionDTO" resultType="int">
	SELECT NVL(COUNT(*), 0)
	FROM PRODUCTION_QUESTION
	WHERE PRODUCTSEQ=#{productSeq} AND PRODUCTQNADEL = 0
</select>


<!-- 모든 해쉬태그 가져오기 -->
<select id="getHashTagList" resultType="com.decolab.wanza.dto.ProductHashTagDTO">
	SELECT *
	FROM PRODUCTION_HASHTAG
</select>




</mapper>